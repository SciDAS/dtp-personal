apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dtp.fullname" . }}
  labels:
    app: {{ template "dtp.name" . }}
    chart: {{ template "dtp.chart" . }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.Replicas }}
  selector:
    matchLabels:
      app: {{ template "dtp.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "dtp.name" . }}
        chart: {{ template "dtp.chart" . }}
        release: {{ .Release.Name }}
    spec:
      containers:               
      - name: dtp-base # Base image(also for local transfers)
        image: {{ .Values.Base.Image }}
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && mkdir -p {{ template "pvcPath" . }}/dtp-data && source ~/.bashrc && chmod -R 777 {{ template "pvcPath" . }}/dtp-data && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ if .Values.iRODS.Enabled }} # iRODS
      - name: dtp-irods
        image: cbmckni/dtp-irods 
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      {{ if .Values.AWS.Enabled }} # AWS CLI
      - name: dtp-aws
        image: mesosphere/aws-cli
        command: ["/bin/sh"]
        args: ["-c", "apk update && apk upgrade && apk add --no-cache bash && echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null"]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      {{ if .Values.Minio.Enabled }} # MinIO
      - name: dtp-minio
        image: bitnami/minio-client
        command: ["/bin/sh"]
        args: ["-c", "tail -f /dev/null"]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      {{ if .Values.NDN.Enabled }} # Name Defined Network
      - name: dtp-ndn
        image: cbmckni/ndn-tools
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      {{ if .Values.Aspera.Enabled }} # Aspera
      - name: dtp-aspera
        image: ibmcom/aspera-cli
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      {{ if .Values.SRATools.Enabled }} # SRA Toolkit
      - name: dtp-sra-toolkit
        image: ncbi/sra-tools
        command: [ "/bin/sh" ]
        args: [ "-c", "apk update && apk upgrade && apk add --no-cache util-linux bash && echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      {{ if .Values.Globus.Enabled }} # Globus
      - name: dtp-globus
        image: ndslabs/gcp-docker
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      {{ if .Values.Google.Enabled }} # Google Cloud
      - name: dtp-gcp
        image: google/cloud-sdk
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      {{ if .Values.FDT.Enabled }} # Fast Data Transfer
      - name: dtp-fdt
        image: cbmckni/fdt-docker
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}  
      restartPolicy: Always
      volumes:
        - name: vol-1
          persistentVolumeClaim:
            claimName: {{ template "pvcName" . }}
                  

# Variables

{{- define "pvcPath" -}}
{{- if .Values.NewPVC.Enabled }}{{ .Values.NewPVC.Path }}{{ else }}{{ .Values.ExistingPVC.Path }}{{ end }}
{{- end -}}

{{- define "pvcName" -}}
{{- if .Values.NewPVC.Enabled }}{{ .Values.NewPVC.Name }}{{ else }}{{ .Values.ExistingPVC.Name }}{{ end }}
{{- end -}}


